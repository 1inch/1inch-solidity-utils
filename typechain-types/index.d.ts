/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { OwnableContract } from "./Ownable";
import { ERC20Contract } from "./ERC20";
import { ERC20PermitContract } from "./ERC20Permit";
import { IERC20PermitContract } from "./IERC20Permit";
import { IERC20MetadataContract } from "./IERC20Metadata";
import { IERC20Contract } from "./IERC20";
import { EthReceiverContract } from "./EthReceiver";
import { IDaiLikePermitContract } from "./IDaiLikePermit";
import { IWETHContract } from "./IWETH";
import { AddressArrayMockContract } from "./AddressArrayMock";
import { AddressSetMockContract } from "./AddressSetMock";
import { DaiLikePermitMockContract } from "./DaiLikePermitMock";
import { ERC20PermitMockContract } from "./ERC20PermitMock";
import { PermitableMockContract } from "./PermitableMock";
import { TokenMockContract } from "./TokenMock";
import { RevertReasonParserTestContract } from "./RevertReasonParserTest";
import { StringUtilTestContract } from "./StringUtilTest";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(name: "Ownable"): OwnableContract;
      require(name: "ERC20"): ERC20Contract;
      require(name: "ERC20Permit"): ERC20PermitContract;
      require(name: "IERC20Permit"): IERC20PermitContract;
      require(name: "IERC20Metadata"): IERC20MetadataContract;
      require(name: "IERC20"): IERC20Contract;
      require(name: "EthReceiver"): EthReceiverContract;
      require(name: "IDaiLikePermit"): IDaiLikePermitContract;
      require(name: "IWETH"): IWETHContract;
      require(name: "AddressArrayMock"): AddressArrayMockContract;
      require(name: "AddressSetMock"): AddressSetMockContract;
      require(name: "DaiLikePermitMock"): DaiLikePermitMockContract;
      require(name: "ERC20PermitMock"): ERC20PermitMockContract;
      require(name: "PermitableMock"): PermitableMockContract;
      require(name: "TokenMock"): TokenMockContract;
      require(name: "RevertReasonParserTest"): RevertReasonParserTestContract;
      require(name: "StringUtilTest"): StringUtilTestContract;
    }
  }
}

export { OwnableContract, OwnableInstance } from "./Ownable";
export { ERC20Contract, ERC20Instance } from "./ERC20";
export { ERC20PermitContract, ERC20PermitInstance } from "./ERC20Permit";
export { IERC20PermitContract, IERC20PermitInstance } from "./IERC20Permit";
export {
  IERC20MetadataContract,
  IERC20MetadataInstance,
} from "./IERC20Metadata";
export { IERC20Contract, IERC20Instance } from "./IERC20";
export { EthReceiverContract, EthReceiverInstance } from "./EthReceiver";
export {
  IDaiLikePermitContract,
  IDaiLikePermitInstance,
} from "./IDaiLikePermit";
export { IWETHContract, IWETHInstance } from "./IWETH";
export {
  AddressArrayMockContract,
  AddressArrayMockInstance,
} from "./AddressArrayMock";
export {
  AddressSetMockContract,
  AddressSetMockInstance,
} from "./AddressSetMock";
export {
  DaiLikePermitMockContract,
  DaiLikePermitMockInstance,
} from "./DaiLikePermitMock";
export {
  ERC20PermitMockContract,
  ERC20PermitMockInstance,
} from "./ERC20PermitMock";
export {
  PermitableMockContract,
  PermitableMockInstance,
} from "./PermitableMock";
export { TokenMockContract, TokenMockInstance } from "./TokenMock";
export {
  RevertReasonParserTestContract,
  RevertReasonParserTestInstance,
} from "./RevertReasonParserTest";
export {
  StringUtilTestContract,
  StringUtilTestInstance,
} from "./StringUtilTest";
